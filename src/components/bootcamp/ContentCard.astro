---
import { getImage } from 'astro:assets';

interface Props {
    imageName: string;
    textPosition: string;
}

const { imageName, textPosition } = Astro.props;

// Dynamischer Import des Bildes
const images = import.meta.glob('/src/assets/layout/*.{jpeg,jpg,png,gif}');
const imagePath = `/src/assets/layout/${imageName}`;

if (!images[imagePath]) {
  throw new Error(`Image "${imagePath}" not found`);
}

const { default: image } = await images[imagePath]() as { default: ImageMetadata };

// Generieren Sie die optimierte Bildquelle
const optimizedImage = await getImage({src: image, format: 'webp'});

const imageUrl = `url("${optimizedImage.src}")`;
const orderImg = textPosition === 'left' ? '2' : '1';
const orderText = textPosition === 'left' ? '1' : '2';
---

<div class="box-wrapper box-wrapper-margin">
    <div class="box-text">
        <slot />
    </div>
    <div class="box-bg" data-pos={textPosition}></div>
</div>

<style define:vars={{imageUrl, orderText, orderImg}}>
    .box-text {
        order: var(--orderText);
    }
    .box-bg {
        background-image: var(--imageUrl);
        order: var(--orderImg);
    }
</style>